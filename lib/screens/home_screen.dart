import 'dart:io';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:image_generator/apis_section/api_services.dart';
import 'package:image_generator/const/colors.dart';
import 'package:image_generator/screens/art_screen.dart';
import 'package:image_generator/widgets/custom_textfeild.dart';
import 'package:path_provider/path_provider.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:screenshot/screenshot.dart';
import 'package:share_plus/share_plus.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({Key? key}) : super(key: key);

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  var sizes = ["Small", "Medium", "Large"];
  var values = ["256x256", "512x512", "1024x1024"];
  String? dropValues;

  var textController = TextEditingController();
  String image = '';
  var isLoaded = false;

  ScreenshotController screenshotController = ScreenshotController();

  //share Section start
  ShareImage() async {
    await screenshotController
        .capture(delay: Duration(milliseconds: 100), pixelRatio: 1.0)
        .then((Uint8List? img) async {
      if (img != null) {
        final directory = (await getApplicationDocumentsDirectory()).path;
        const filename = "share.png";
        final imgpath = await File("$directory/$filename").create();
        await imgpath.writeAsBytes(img);

        Share.shareFiles([imgpath.path],
            text: "Generated by AI  - Younas khan");
      } else {
        print("Failed to take screenshot");
      }
    });
  }
//share section end here

  // download section start from here
  downloadImg() async {
    var result = await Permission.storage.request();
    if (result.isGranted) {
      const foldername = "AI Image generation";
      final path = Directory("storage/emulated/0/$foldername");
      final filename = "${DateTime.now().microsecondsSinceEpoch}.png";

      if (await path.exists()) {
       await screenshotController.captureAndSave(path.path,
            delay: Duration(milliseconds: 100),
            fileName: filename,
            pixelRatio: 1.0);
       ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Image downloaded to ${path.path}")));
      }else{
        await path.create();
        await screenshotController.captureAndSave(path.path,delay: Duration(milliseconds: 100),fileName: filename,
        pixelRatio: 1.0);
        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Image download to ${path.path}")));
      }
    } else {
      ScaffoldMessenger.of(context)
          .showSnackBar(SnackBar(content: Text("Permission denied")));
    }
  } // download section end here

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      resizeToAvoidBottomInset: false,
      appBar: AppBar(

        // In appbar action the art button is build
        actions: [
          Padding(
            padding: const EdgeInsets.all(10),
            child: ElevatedButton(
              onPressed: () {
                Navigator.of(context).push(MaterialPageRoute(builder: (context)=>ArtScreen()));
              },
              child: Text("My Art"),
              style: ElevatedButton.styleFrom(
                  backgroundColor: btnColor, padding: EdgeInsets.all(10)),
            ),
          )
        ],
        centerTitle: true,
        title: Text(
          "AI Image Generator",
          style: TextStyle(fontFamily: "poppins_bold", color: whiteColor),
        ),
      ),
      body: Padding(
        padding: EdgeInsets.all(8),
        child: Column(
          children: [
            Expanded(
                child: Column(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                Row(
                  children: [
                    Expanded(
                      child: Container(
                        height: 44,
                        padding:
                            EdgeInsets.symmetric(vertical: 4, horizontal: 16),
                        decoration: BoxDecoration(
                          color: whiteColor,
                          borderRadius: BorderRadius.circular(12),
                        ),

                        // text form field is use for to search the image to be downloaded
                        child: TextFormField(
                          controller: textController,
                          decoration: InputDecoration(
                              hintText: "eg 'A boy playing with cat'",
                              border: InputBorder.none),
                        ),
                      ),
                    ),
                    SizedBox(
                      width: 12,
                    ),
                    Container(
                      height: 44,
                      padding: EdgeInsets.symmetric(vertical: 2, horizontal: 8),
                      decoration: BoxDecoration(
                          color: whiteColor,
                          borderRadius: BorderRadius.circular(12)),

                      // this dropdown button for selecting the size
                      child: DropdownButtonHideUnderline(
                        child: DropdownButton(
                          icon: Icon(
                            Icons.expand_more,
                            color: btnColor,
                          ),
                          value: dropValues,
                          hint: Text("Select size"),
                          items: List.generate(
                              sizes.length,
                              (index) => DropdownMenuItem(
                                    child: Text(sizes[index]),
                                    value: values[index],
                                  )),
                          onChanged: (value) {
                            setState(() {
                              dropValues = value.toString();
                            });
                          },
                        ),
                      ),
                    )
                  ],
                ),
                SizedBox(
                    height: 44,
                    width: 300,

                    // this elevated button created for to generate the image
                    child: ElevatedButton(
                        style: ElevatedButton.styleFrom(
                            backgroundColor: btnColor, shape: StadiumBorder()),
                        onPressed: () async {
                          if (textController.text.isNotEmpty &&
                              dropValues!.isNotEmpty) {
                            setState(() {
                              isLoaded = false;
                            });
                            image = await Api.generateImage(
                                textController.text, dropValues!);
                            setState(() {
                              isLoaded = true;
                            });
                          } else {
                            ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                content:
                                    Text("Please pass the query and size")));
                          }
                        },
                        child: Text("Generate")))
              ],
            )),
            Expanded(
              flex: 4,
              child: isLoaded
                  ? Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Container(
                            clipBehavior: Clip.antiAlias,
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(12),
                            ),
                            child: Screenshot(
                              controller: screenshotController,
                              child: Image.network(
                                image,
                                fit: BoxFit.contain,
                              ),
                            )),
                        Row(
                          children: [
                            Expanded(
                              child: ElevatedButton.icon(
                                onPressed: () {
                                  downloadImg();

                                },
                                icon: Icon(Icons.download_for_offline_rounded),
                                label: Text("Download"),
                                style: ElevatedButton.styleFrom(
                                    backgroundColor: btnColor,
                                    padding: EdgeInsets.all(8)),
                              ),
                            ),
                            SizedBox(
                              width: 5,
                            ),
                            ElevatedButton.icon(
                              onPressed: () async {
                                await ShareImage();
                                ScaffoldMessenger.of(context).showSnackBar(
                                    SnackBar(content: Text("Image Shared")));
                              },
                              icon: Icon(Icons.share),
                              label: Text("Share"),
                              style: ElevatedButton.styleFrom(
                                  backgroundColor: btnColor,
                                  padding: EdgeInsets.all(8)),
                            )
                          ],
                        )
                      ],
                    )
                  : Container(
                      alignment: Alignment.center,
                      decoration: BoxDecoration(
                        color: whiteColor,
                        borderRadius: BorderRadius.circular(10),
                      ),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Image.asset("assets/loader.gif"),
                          Text(
                            "Waiting for image to be generated",
                            style: TextStyle(
                              fontSize: 17,
                              fontWeight: FontWeight.w700,
                            ),
                          ),
                        ],
                      ),
                    ),
            ),
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: Text(
                "Developed By Younas khan",
                style: TextStyle(color: whiteColor, fontSize: 14),
              ),
            )
          ],
        ),
      ),
    );
  }
}
